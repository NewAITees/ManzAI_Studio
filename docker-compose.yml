version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
      - app_data:/app/data
    env_file:
      - .env
    environment:
      - FLASK_APP=src.app:create_app
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-0}
      - VOICEVOX_URL=http://voicevox:50021
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_INSTANCE_TYPE=docker
      - OLLAMA_MODEL=${OLLAMA_MODEL:-gemma3:4b}
    ports:
      - "5000:5000"
    depends_on:
      - voicevox
      - ollama
    networks:
      - manzai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - manzai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  # VoiceVox service
  voicevox:
    image: voicevox/voicevox_engine:cpu-ubuntu20.04-latest
    ports:
      - "50021:50021"
    volumes:
      - voicevox_data:/opt/voicevox_engine
    networks:
      - manzai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50021/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Ollama service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama/models
    networks:
      - manzai-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  manzai-network:
    driver: bridge

volumes:
  app_data:
  ollama_data:
  voicevox_data: 