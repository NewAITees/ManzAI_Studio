[project]
name = "manzai-studio"
version = "0.1.0"
description = "ManzAI Studio - AIを活用した漫才スクリプト生成・音声合成システム"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "flask>=3.1.1",
    "flask-cors>=6.0.1",
    "psutil>=6.1.1",
    "pydantic>=2.9.2",
    "python-dotenv>=1.1.0",
    "requests>=2.32.4",
    "typing-extensions>=4.14.0",
    "werkzeug>=3.1.3",
]

[tool.poetry]
name = "manzai-studio"
version = "0.1.0"
description = "ManzAI Studio - AIを活用した漫才スクリプト生成・音声合成システム"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.0.0"
flask = "^2.0.0"
werkzeug = "^2.0.0"
python-dotenv = "^0.19.0"
requests = "^2.26.0"
typing-extensions = "^4.0.0"
flask-cors = "^5.0.1"
psutil = "^7.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.0.0"
mypy = "^1.0.0"
flake8 = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "bandit>=1.8.5",
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.0",
    "safety>=3.5.2",
]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [".git", ".ruff_cache", ".venv", ".vscode"]

[tool.ruff.lint]
preview = true
select = [
    "ANN",  # type annotation
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "RUF",  # ruff specific rules
    "W",    # pycodestyle warnings
]
ignore = [
    "F401",  # unused import
    "F841",  # unused variable
]
unfixable = ["F401", "F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.scripts]
start = "src.backend.app:main"
