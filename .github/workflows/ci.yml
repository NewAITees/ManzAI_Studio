name: ManzAI Studio CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      voicevox:
        image: voicevox/voicevox_engine:cpu-ubuntu20.04-latest
        ports:
          - 50021:50021
      
      ollama:
        image: ollama/ollama:latest
        ports:
          - 11434:11434
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install Dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install
    
    - name: Wait for services
      run: |
        echo "Waiting for VoiceVox to start..."
        timeout 60 bash -c 'until curl -s http://localhost:50021/docs > /dev/null; do sleep 2; done'
        echo "Waiting for Ollama to start..."
        timeout 60 bash -c 'until curl -s http://localhost:11434/api/tags > /dev/null; do sleep 2; done'
    
    - name: Run Tests
      run: |
        export VOICEVOX_URL=http://localhost:50021
        export OLLAMA_URL=http://localhost:11434
        export OLLAMA_MODEL=llama2
        poetry run pytest tests/api tests/utils tests/services --cov=src
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        file: .coverage
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Install Dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install
    
    - name: Run Linting
      run: |
        poetry run flake8 src tests
        poetry run black --check src tests
        poetry run isort --check-only src tests

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build and push Docker images
      run: |
        docker-compose build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: docker-images
        path: |
          Dockerfile
          docker-compose.yml
        retention-days: 5 